{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/dashboard/dashboard.component.css","webpack:///./src/app/dashboard/dashboard.component.html","webpack:///./src/app/dashboard/dashboard.component.ts","webpack:///./src/app/http.service.ts","webpack:///./src/app/login/login.component.css","webpack:///./src/app/login/login.component.html","webpack:///./src/app/login/login.component.ts","webpack:///./src/app/register/register.component.css","webpack:///./src/app/register/register.component.html","webpack:///./src/app/register/register.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { LoginComponent  } from './login/login.component';\r\nimport { RegisterComponent  } from './register/register.component';\r\nimport { DashboardComponent  } from './dashboard/dashboard.component';\r\n\r\nconst routes: Routes = [\r\n  \r\n  { path: 'register', component: RegisterComponent },\r\n  { path: 'user/:username', component: DashboardComponent },\r\n  { path: '', component: LoginComponent },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<!--The content below is only a placeholder and can be replaced.-->\\r\\n<div style=\\\"text-align:center\\\">\\r\\n  <!-- <h1>\\r\\n    {{ title }}\\r\\n  </h1> -->\\r\\n  \\r\\n\\r\\n<router-outlet></router-outlet>\\r\\n\"","import { Component } from '@angular/core';\r\nimport { HttpService } from './http.service';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent {\r\n  title = 'Travelogue';\r\n  constructor(private _httpService: HttpService){}\r\n}\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { AppComponent } from './app.component';\r\nimport { HttpService } from './http.service';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { LoginComponent } from './login/login.component';\r\nimport { RegisterComponent } from './register/register.component';\r\nimport { DashboardComponent } from './dashboard/dashboard.component';\r\nimport { AgmCoreModule } from '@agm/core';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    LoginComponent,\r\n    RegisterComponent,\r\n    DashboardComponent,\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    FormsModule,\r\n    AppRoutingModule,\r\n    HttpClientModule,\r\n    AgmCoreModule.forRoot({\r\n      apiKey: ''      \r\n    })\r\n  ],\r\n  providers: [HttpService],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","module.exports = \"agm-map { \\r\\n    height: 600px; /* height is required */ \\r\\n    \\r\\n}\\r\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvZGFzaGJvYXJkL2Rhc2hib2FyZC5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0ksYUFBYSxFQUFFLHVCQUF1Qjs7QUFFMUMiLCJmaWxlIjoic3JjL2FwcC9kYXNoYm9hcmQvZGFzaGJvYXJkLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyJhZ20tbWFwIHsgXHJcbiAgICBoZWlnaHQ6IDYwMHB4OyAvKiBoZWlnaHQgaXMgcmVxdWlyZWQgKi8gXHJcbiAgICBcclxufVxyXG4iXX0= */\"","module.exports = \"<nav class=\\\"navbar navbar-expand-lg navbar-light bg-light\\\">\\r\\n\\r\\n\\t<div class=\\\"collapse navbar-collapse\\\" id=\\\"navbarSupportedContent\\\">\\r\\n\\t\\t<ul class=\\\"navbar-nav mr-auto\\\">\\r\\n\\t\\t\\t<li class=\\\"nav-item active\\\">\\r\\n\\t\\t\\t\\t<a class=\\\"nav-link\\\" href=\\\"#\\\">Home <span class=\\\"sr-only\\\">(current)</span></a>\\r\\n\\t\\t\\t</li>\\r\\n\\t\\t\\t<li class=\\\"nav-item\\\">\\r\\n\\t\\t\\t\\t<a class=\\\"nav-link\\\" href=\\\"#\\\">Add Destination</a>\\r\\n\\t\\t\\t</li>\\r\\n\\t\\t\\t<li class=\\\"nav-item\\\">\\r\\n\\t\\t\\t\\t<a class=\\\"nav-link\\\" href=\\\"#\\\">Edit Profile</a>\\r\\n\\t\\t\\t</li>\\r\\n\\t\\t\\t<li class=\\\"nav-item\\\">\\r\\n\\t\\t\\t\\t<a class=\\\"nav-link\\\" href=\\\"#\\\">Logout</a>\\r\\n\\t\\t\\t</li>\\r\\n\\t\\t</ul>\\r\\n\\r\\n\\t</div>\\r\\n</nav>\\r\\n\\r\\n\\r\\n<p *ngIf='selectedMarker'>Lat: {{ selectedMarker.lat }} Lng: {{ selectedMarker.lng }}</p>\\r\\n<agm-map [latitude]='latitude' [longitude]='longitude' [zoom]='2.5' (mapClick)='addMarker($event.coords.lat, $event.coords.lng)'>\\r\\n\\t<agm-marker *ngFor='let marker of markers' [latitude]='marker.lat' [longitude]='marker.lng' [opacity]='marker.alpha'\\r\\n\\t [markerDraggable]='true' (markerClick)='selectMarker($event)'>\\r\\n\\t</agm-marker>\\r\\n\\t>\\r\\n</agm-map>\\r\\n\\r\\n\\r\\n<div *ngIf='showForm'>\\r\\n\\t<form (submit)=\\\"addCity()\\\" class=\\\"form-inline text-center\\\">\\r\\n\\t\\t<p>City:</p>\\r\\n\\t\\t<input [(ngModel)]=\\\"newLocation.city\\\" type=\\\"text\\\" name=\\\"newLocation.city\\\" placeholder=\\\"City\\\" class=\\\"form-control\\\"/>\\r\\n\\t\\t<p>State:</p>\\r\\n\\t\\t<input [(ngModel)]=\\\"newLocation.state\\\" type=\\\"text\\\" name=\\\"newLocation.state\\\" placeholder=\\\"State\\\" class=\\\"form-control\\\"/>\\r\\n\\t\\t<p>Country:</p>\\r\\n\\t\\t<input [(ngModel)]=\\\"newLocation.country\\\" type=\\\"text\\\" name=\\\"newLocation.country\\\" placeholder=\\\"Country\\\" class=\\\"form-control\\\"/>\\r\\n\\t\\t<!-- <p>Latitude:</p> -->\\r\\n\\t\\t<input [(ngModel)]=\\\"newLocation.latitude\\\" type=\\\"hidden\\\" name=\\\"newLocation.latitude\\\" placeholder=\\\"Latitude\\\" class=\\\"form-control\\\"/>\\r\\n\\t\\t<!-- <p>Longitude:</p> -->\\r\\n\\t\\t<input [(ngModel)]=\\\"newLocation.longitude\\\" type='hidden' name=\\\"newLocation.longitude\\\" placeholder=\\\"Longitude\\\" class=\\\"form-control\\\"/>\\r\\n\\t\\t<input type=\\\"submit\\\" value=\\\"Save This Location\\\" />\\r\\n\\t</form>\\r\\n</div>\\r\\n\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport { getDefaultService } from 'selenium-webdriver/edge';\r\nimport { HttpService } from '../http.service';\r\nimport { ActivatedRoute, Params, Router } from '@angular/router';\r\n// import { MapsAPILoader, AgmMap } from '@agm/core';\r\n// import { GoogleMapsAPIWrapper } from '@agm/core/services';\r\n// import { google } from '@agm/core/services/google-maps-types';\r\n\r\n@Component({\r\n  selector: 'app-dashboard',\r\n  templateUrl: './dashboard.component.html',\r\n  styleUrls: ['./dashboard.component.css'],\r\n  // styles: ['agm-map { height: 600px; /* height is required */ }'],\r\n  // template: `\r\n  //   <agm-map [zoom]=\"2.5\">\r\n  //   </agm-map>\r\n  // `\r\n})\r\nexport class DashboardComponent implements OnInit {\r\n  lat = 43.879078;\r\n  lng = -103.4615581;\r\n  selectedMarker;\r\n  // Declare an empty array to hold coordinates obtained from the database for logged in user\r\n  markers = [\r\n    // These are all just random coordinates from https://www.random.org/geographic-coordinates/\r\n    // { lat: 22.33159, lng: 105.63233},\r\n    // { lat: 7.92658, lng: -12.05228},\r\n    // { lat: 48.75606, lng: -118.85900},\r\n    // { lat: 5.19334, lng: -67.03352},\r\n    // { lat: 12.09407, lng: 26.31618},\r\n    // { lat: 47.92393, lng: 78.58339}\r\n  ];\r\n  username = \"\";\r\n  errors = [];\r\n  // A new location form will show when this variable is set to true\r\n  showForm = false;\r\n  newLocation = {city: '', state: '', country: '', latitude: 0, longitude: 0};\r\n  geocoder;\r\n\r\n  constructor(\r\n    private _httpService: HttpService,\r\n    private _route: ActivatedRoute,\r\n    private _router: Router,\r\n    // public mapsApiLoader: MapsAPILoader,\r\n    // private wrapper: GoogleMapsAPIWrapper    \r\n    ) {\r\n    //   this.mapsApiLoader = mapsApiLoader;\r\n    // this.wrapper = wrapper;\r\n    // this.mapsApiLoader.load().then(() => {\r\n    //   this.geocoder = new google.maps.Geocoder();\r\n    // });\r\n     }\r\n\r\n  ngOnInit() {\r\n    // The following method gets the user from the database if the username is stored in session,\r\n    // extracts the locations array from the user's info, and\r\n    // adds the locations' coordinates to the markers array\r\n    console.log(\"from storage:\", sessionStorage.getItem('username'));\r\n    let sessionUsername = sessionStorage.getItem('username');\r\n    this._route.params.subscribe((params: Params) => {\r\n      console.log(\"From URL: \" + params['username']);\r\n      this.username = params['username'];\r\n      if(sessionUsername === this.username){\r\n        this.getUser(this.username);\r\n      }else{\r\n        this.goHome();\r\n      }\r\n    });            \r\n  }\r\n\r\n  getUser(username){\r\n    // console.log(\"#2: In dashboard component ts\", this.username);\r\n    let tempObservable = this._httpService.getThisUser(this.username);\r\n    tempObservable.subscribe(data => {\r\n      console.log(\"Got our user!\", data);\r\n      // console.log(data['data']['locations'])\r\n      for(var i=0; i<data['data']['locations'].length; i++){\r\n        // console.log(data['data']['locations'][i].coordinates);\r\n        // this.markers.push(data['data']['locations'][i].coordinates)\r\n        this.markers.push(data['data']['locations'][i].coordinates)\r\n      }   \r\n    })\r\n  }\r\n\r\n  // **Need to modify this method to bring up the info window which asks the user to add, autopopulating with the coords. and City, State name\r\n  addMarker(lat: number, lng: number) {\r\n    console.log(\"Lat: \", lat)\r\n    console.log(\"Long: \", lng)\r\n    this.markers.push({ lat, lng, alpha: 0.6 });\r\n    this.showForm = true;\r\n    this.newLocation.latitude = lat;\r\n    this.newLocation.longitude = lng;\r\n\r\n    // findAddressByCoordinates() {\r\n      // this.geocoder.geocode({\r\n      //   'location': {\r\n      //     lat: this.newLocation.latitude,\r\n      //     lng: this.newLocation.longitude\r\n      //   }\r\n      // }, (results, status) => {\r\n      //   console.log(results);\r\n      // })\r\n    // }\r\n  }\r\n\r\n  max(coordType: 'lat' | 'lng'): number {\r\n    return Math.max(...this.markers.map(marker => marker[coordType]));\r\n  }\r\n\r\n  min(coordType: 'lat' | 'lng'): number {\r\n    return Math.min(...this.markers.map(marker => marker[coordType]));\r\n  }\r\n\r\n  selectMarker(event) {\r\n    console.log(event)\r\n    this.selectedMarker = {\r\n      lat: event.latitude,\r\n      lng: event.longitude\r\n    };\r\n  }\r\n  goHome() {\r\n    this._router.navigate(['']);\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class HttpService {\r\n\r\n  constructor(private _http: HttpClient){}\r\n\r\n  loginThisUser(user){\r\n    // console.log(\"#3 in http.service.ts user: \", user);\r\n    return this._http.post('/login', user);\r\n  }\r\n\r\n  registerThisUser(user){\r\n    // console.log(\"#3 in http.service.ts user: \", user);\r\n    return this._http.post('/create', user);\r\n  }\r\n\r\n  getThisUser(username){\r\n    // console.log(\"#3 in http.service.ts username: \", username);\r\n    return this._http.get('/userInfo/' + username);\r\n  }\r\n\r\n}\r\n","module.exports = \".login {\\r\\n    background-image: url(https://images.pexels.com/photos/457882/pexels-photo-457882.jpeg?cs=srgb&dl=beach-calm-clouds-457882.jpg&fm=jpg);\\r\\n    background-size: cover;\\r\\n    padding: 60px;\\r\\n    min-height: 800px;\\r\\n    font-family:Arial, Helvetica, sans-serif\\r\\n}\\r\\nh1 {\\r\\n    font-family: Apple Chancery;\\r\\n}\\r\\n\\r\\n\\r\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbG9naW4vbG9naW4uY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtJQUNJLHNJQUFzSTtJQUN0SSxzQkFBc0I7SUFDdEIsYUFBYTtJQUNiLGlCQUFpQjtJQUNqQjtBQUNKO0FBQ0E7SUFDSSwyQkFBMkI7QUFDL0IiLCJmaWxlIjoic3JjL2FwcC9sb2dpbi9sb2dpbi5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLmxvZ2luIHtcclxuICAgIGJhY2tncm91bmQtaW1hZ2U6IHVybChodHRwczovL2ltYWdlcy5wZXhlbHMuY29tL3Bob3Rvcy80NTc4ODIvcGV4ZWxzLXBob3RvLTQ1Nzg4Mi5qcGVnP2NzPXNyZ2ImZGw9YmVhY2gtY2FsbS1jbG91ZHMtNDU3ODgyLmpwZyZmbT1qcGcpO1xyXG4gICAgYmFja2dyb3VuZC1zaXplOiBjb3ZlcjtcclxuICAgIHBhZGRpbmc6IDYwcHg7XHJcbiAgICBtaW4taGVpZ2h0OiA4MDBweDtcclxuICAgIGZvbnQtZmFtaWx5OkFyaWFsLCBIZWx2ZXRpY2EsIHNhbnMtc2VyaWZcclxufVxyXG5oMSB7XHJcbiAgICBmb250LWZhbWlseTogQXBwbGUgQ2hhbmNlcnk7XHJcbn1cclxuXHJcblxyXG4iXX0= */\"","module.exports = \"<!-- <div class=\\\"login\\\">\\r\\n<div class=\\\"container\\\">\\r\\n    <div class=\\\"row justify-content-md-center\\\">\\r\\n      <div class=\\\"col col-lg-2\\\">\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"col-md-auto\\\">\\r\\n          <div class=\\\"form-group border rounded center bg-white text-dark mt-5\\\">\\r\\n              <h3>Login</h3>\\r\\n            <form (submit)=\\\"onLogin()\\\">\\r\\n\\r\\n               <input [(ngModel)]=\\\"loginUser.email\\\" type=\\\"text\\\" name=\\\"loginUser.email\\\" placeholder=\\\"Email\\\" class=\\\"form-control-sm\\\"/>\\r\\n              <br>\\r\\n               <input [(ngModel)]=\\\"loginUser.password\\\" type='password' name=\\\"loginUser.password\\\" placeholder=\\\"Password\\\" class=\\\"form-control-sm\\\"><br> -->\\r\\n               <!-- <button [routerLink]=\\\"['/user/:id']\\\">Login</button>&nbsp;&nbsp; -->\\r\\n               \\r\\n               <!-- <input type=\\\"submit\\\" value=\\\"Login\\\"/>\\r\\n          \\r\\n               <p>Need an account? <a [routerLink]=\\\"['/register']\\\">Sign up</a></p>\\r\\n          \\r\\n            </form>\\r\\n          </div>\\r\\n          \\r\\n          <div *ngIf='errors.length > 0' style='color:red;'>\\r\\n            <h6 *ngFor='let error of errors'>{{error}}</h6>\\r\\n          </div>\\r\\n      </div>\\r\\n      <div class=\\\"col col-lg-2\\\">\\r\\n\\r\\n      </div>\\r\\n    </div>\\r\\n</div>\\r\\n\\r\\n -->\\r\\n\\r\\n<!-- New code starts here: -->\\r\\n<body>\\r\\n\\t<div class=\\\"login\\\">\\r\\n  \\r\\n    <!-- <h3 class=\\\"text-center text-white pt-5\\\">Login form</h3> -->\\r\\n    <div class=\\\"container\\\">\\r\\n        <div id=\\\"login-row\\\" class=\\\"row justify-content-center align-items-center\\\">\\r\\n            <div id=\\\"login-column\\\" class=\\\"col-md-3\\\">\\r\\n                <div class=\\\"login-box col-md-12\\\">\\r\\n                  \\r\\n                    <form (submit) = \\\"onLogin()\\\" >\\r\\n                        <h1 class=\\\"text-center\\\">Travelogue</h1>\\r\\n                        <h5 class=\\\"text-center text-dark pt-3\\\">Log into your Account</h5>\\r\\n                        <!-- Email -->\\r\\n                        <div class=\\\"form-group text-center\\\">\\r\\n                            <input [(ngModel)]=\\\"loginUser.email\\\" type=\\\"text\\\" name=\\\"loginUser.email\\\" placeholder=\\\"Email\\\" class=\\\"form-control\\\"/>\\r\\n                          </div>\\r\\n                        <!-- Password -->\\r\\n                        <div class=\\\"form-group text-center\\\">\\r\\n                            <input [(ngModel)]=\\\"loginUser.password\\\" type='password' name=\\\"loginUser.password\\\" placeholder=\\\"Password\\\" class=\\\"form-control\\\">\\r\\n                        </div>\\r\\n                        <!-- Button -->\\r\\n                        <div class=\\\"form-group text-center\\\">\\r\\n                            <label for=\\\"remember-me\\\" class=\\\"text-info text-dark\\\"><span>Remember me</span> <span><input id=\\\"remember-me\\\" name=\\\"remember-me\\\" type=\\\"checkbox\\\"></span></label><br>\\r\\n                            <input type=\\\"submit\\\" value=\\\"Login\\\" class=\\\"btn btn-info btn-md btn-dark\\\"/>\\r\\n                            <!-- <input type=\\\"submit\\\" name=\\\"submit\\\" class=\\\"btn btn-info btn-md\\\" value=\\\"submit\\\"> -->\\r\\n                        </div>\\r\\n\\r\\n                        <div id=\\\"register-link\\\" class=\\\"text-center\\\">\\r\\n                        <p>Need an account? <a [routerLink]=\\\"['/register']\\\">Sign up</a></p>\\r\\n                        </div>\\r\\n\\r\\n                    </form>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n\\r\\n<div *ngIf='errors.length > 0' style='color:red;'>\\r\\n    <h6 *ngFor='let error of errors'>{{error}}</h6>\\r\\n  </div>\\r\\n\\r\\n\\r\\n</body>\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport { HttpService } from '../http.service';\r\nimport { ActivatedRoute, Params, Router } from '@angular/router';\r\nimport { getCheckNoChangesMode } from '@angular/core/src/render3/state';\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.css']\r\n})\r\nexport class LoginComponent implements OnInit {\r\n  loginUser = { email: '', password: '' }\r\n  errors = [];\r\n\r\n  constructor(\r\n    private _httpService: HttpService,\r\n    private _route: ActivatedRoute,\r\n    private _router: Router\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  onLogin() {\r\n    console.log(\"#2: In login component ts\", this.loginUser);\r\n    let tempObservable = this._httpService.loginThisUser(this.loginUser);\r\n    tempObservable.subscribe(data => {\r\n      console.log(\"#6 login component got the user\", data);\r\n      // Clear the errors array per every login attempt\r\n      this.errors = [];\r\n      if(data['message'] === 'Email is null'){\r\n        this.errors.push(\"Please enter your login email.\");\r\n      }else if(data['message'] === 'User not found'){\r\n        console.log(\"Going back home\");\r\n        this.errors.push(\"Email/Password combination is not valid.\");\r\n      }else if(data['message'] === 'Password is invalid'){\r\n        this.errors.push(\"Email/Password combination is not valid.\");\r\n      }else if(data['message'] === 'Password is null'){\r\n        console.log(\"No password\");\r\n        this.errors.push(\"Please enter your password.\");\r\n      } else if(data['message'] === \"The passwords don't match.\"){\r\n        console.log(\"Passwords don't match\")\r\n        this.errors.push(\"Email/Password combination is not valid.\");\r\n      } else {\r\n        // console.log(\"username: \", data['data']['username']);\r\n        var username = data['data']['username'];\r\n        // upon successful login, save username to Window.sessionStorage\r\n        sessionStorage.setItem('username', username);\r\n        // then redirect to the user's dashboard\r\n        this._router.navigate(['user/'+ username]);\r\n      }\r\n      \r\n      // if(resp['message'] === 'Error') {\r\n      //   console.log(\"This is our error data: \", resp);\r\n      //     // console.log(resp['errors']['errors']['name']['message'])\r\n        \r\n      //     var errorsResponse = resp['errors']['errors']\r\n\r\n      //     for(var key in errorsResponse){\r\n      //       var errString = errorsResponse[key]['message']\r\n      //       this.errors.push(errString)          \r\n      //     }  \r\n            \r\n      // } else {\r\n      //   this.goHome();\r\n      // }\r\n    });\r\n  }\r\n\r\n  goHome() {\r\n    this._router.navigate(['']);\r\n  }\r\n  \r\n}\r\n","module.exports = \".register {\\r\\n    background-image: url(https://images.pexels.com/photos/876218/pexels-photo-876218.jpeg?cs=srgb&dl=architecture-benches-buildings-876218.jpg&fm=jpg);\\r\\n    background-size: cover;\\r\\n    padding: 60px;\\r\\n    min-height: 800px;\\r\\n    font-family:Arial, Helvetica, sans-serif\\r\\n}\\r\\nh1 {\\r\\n    font-family: Apple Chancery;\\r\\n}\\r\\n#login-column {\\r\\n    border: 2px solid rgba(126, 145, 173);\\r\\n    background-color:rgba(126, 145, 173, 0.5);\\r\\n    \\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvcmVnaXN0ZXIvcmVnaXN0ZXIuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtJQUNJLG1KQUFtSjtJQUNuSixzQkFBc0I7SUFDdEIsYUFBYTtJQUNiLGlCQUFpQjtJQUNqQjtBQUNKO0FBQ0E7SUFDSSwyQkFBMkI7QUFDL0I7QUFDQTtJQUNJLHFDQUFxQztJQUNyQyx5Q0FBeUM7O0FBRTdDIiwiZmlsZSI6InNyYy9hcHAvcmVnaXN0ZXIvcmVnaXN0ZXIuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi5yZWdpc3RlciB7XHJcbiAgICBiYWNrZ3JvdW5kLWltYWdlOiB1cmwoaHR0cHM6Ly9pbWFnZXMucGV4ZWxzLmNvbS9waG90b3MvODc2MjE4L3BleGVscy1waG90by04NzYyMTguanBlZz9jcz1zcmdiJmRsPWFyY2hpdGVjdHVyZS1iZW5jaGVzLWJ1aWxkaW5ncy04NzYyMTguanBnJmZtPWpwZyk7XHJcbiAgICBiYWNrZ3JvdW5kLXNpemU6IGNvdmVyO1xyXG4gICAgcGFkZGluZzogNjBweDtcclxuICAgIG1pbi1oZWlnaHQ6IDgwMHB4O1xyXG4gICAgZm9udC1mYW1pbHk6QXJpYWwsIEhlbHZldGljYSwgc2Fucy1zZXJpZlxyXG59XHJcbmgxIHtcclxuICAgIGZvbnQtZmFtaWx5OiBBcHBsZSBDaGFuY2VyeTtcclxufVxyXG4jbG9naW4tY29sdW1uIHtcclxuICAgIGJvcmRlcjogMnB4IHNvbGlkIHJnYmEoMTI2LCAxNDUsIDE3Myk7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOnJnYmEoMTI2LCAxNDUsIDE3MywgMC41KTtcclxuICAgIFxyXG59Il19 */\"","module.exports = \"<!-- <h3>Register:</h3>\\r\\n<div class=\\\"form\\\">\\r\\n  <form (submit)=\\\"onRegister()\\\">\\r\\n      <p>First Name:</p>\\r\\n      <input [(ngModel)]=\\\"registerUser.first_name\\\" type=\\\"text\\\" name=\\\"registerUser.first_name\\\" placeholder=\\\"First Name\\\"/>\\r\\n      <p>Last Name:</p>\\r\\n     <input [(ngModel)]=\\\"registerUser.last_name\\\" type=\\\"text\\\" name=\\\"registerUser.last_name\\\" placeholder=\\\"Last Name\\\"/>\\r\\n     <p>Username:</p>\\r\\n     <input [(ngModel)]=\\\"registerUser.username\\\" type=\\\"text\\\" name=\\\"registerUser.username\\\" placeholder=\\\"Username\\\"/>\\r\\n     <p>Email:</p>\\r\\n     <input [(ngModel)]=\\\"registerUser.email\\\" type=\\\"text\\\" name=\\\"registerUser.email\\\" placeholder=\\\"Email\\\"/>\\r\\n     <p>Password:</p>\\r\\n     <input [(ngModel)]=\\\"registerUser.password\\\" type='password' name=\\\"registerUser.password\\\" placeholder=\\\"Password\\\"><br>\\r\\n     <p>Confirm Password:</p>\\r\\n     <input [(ngModel)]=\\\"register.confirm_pass\\\" type=\\\"password\\\" name=\\\"register.confirm_pass\\\" placeholder=\\\"Confirm Password\\\"/>\\r\\n     <br>\\r\\n     <br>\\r\\n     <input type=\\\"submit\\\" value=\\\"Register\\\"/>\\r\\n\\r\\n  </form>\\r\\n</div>\\r\\n\\r\\n<div *ngIf='errors.length > 0' style='color:red;'>\\r\\n  <h6 *ngFor='let error of errors'>{{error}}</h6>\\r\\n</div> -->\\r\\n\\r\\n<!-- New code starts here: -->\\r\\n<body>\\r\\n    <div class=\\\"register\\\">\\r\\n    \\r\\n      <!-- <h3 class=\\\"text-center text-white pt-5\\\">Login form</h3> -->\\r\\n      <div class=\\\"container\\\">\\r\\n          <div id=\\\"login-row\\\" class=\\\"row justify-content-center align-items-center \\\">\\r\\n              <div id=\\\"login-column\\\" class=\\\"col-md-3\\\">\\r\\n                  <div class=\\\"login-box col-md-12\\\">\\r\\n                    \\r\\n                      <form (submit)=\\\"onRegister()\\\" >\\r\\n                          <h1 class=\\\"text-center\\\">Travelogue</h1>\\r\\n                          <h5 class=\\\"text-center text-dark pt-3\\\">Register for an Account</h5>\\r\\n                          <!-- First Name -->\\r\\n                          <div class=\\\"form-group text-center\\\">\\r\\n                              <input [(ngModel)]=\\\"registerUser.first_name\\\" type=\\\"text\\\" name=\\\"registerUser.first_name\\\" placeholder=\\\"First Name\\\" class=\\\"form-control\\\"/>\\r\\n                            </div>\\r\\n                          <!-- Last Name -->\\r\\n                          <div class=\\\"form-group text-center\\\">\\r\\n                              <input [(ngModel)]=\\\"registerUser.last_name\\\" type=\\\"text\\\" name=\\\"registerUser.last_name\\\" placeholder=\\\"Last Name\\\" class=\\\"form-control\\\"/>\\r\\n                          </div>\\r\\n                          <!-- First Username -->\\r\\n                          <div class=\\\"form-group text-center\\\">\\r\\n                              <input [(ngModel)]=\\\"registerUser.username\\\" type=\\\"text\\\" name=\\\"registerUser.username\\\" placeholder=\\\"Username\\\" class=\\\"form-control\\\"/>\\r\\n                            </div>\\r\\n                          <!-- Email -->\\r\\n                          <div class=\\\"form-group text-center\\\">\\r\\n                              <input [(ngModel)]=\\\"registerUser.email\\\" type=\\\"text\\\" name=\\\"registerUser.email\\\" placeholder=\\\"Email\\\" class=\\\"form-control\\\"/>\\r\\n                            </div>\\r\\n                          <!-- Password -->\\r\\n                          <div class=\\\"form-group text-center\\\">\\r\\n                              <input [(ngModel)]=\\\"registerUser.password\\\" type='password' name=\\\"registerUser.password\\\" placeholder=\\\"Password\\\" class=\\\"form-control\\\"/>\\r\\n                            </div>\\r\\n                          <!-- Confirm Password -->\\r\\n                          <div class=\\\"form-group text-center\\\">\\r\\n                              <input [(ngModel)]=\\\"register.confirm_pass\\\" type=\\\"password\\\" name=\\\"register.confirm_pass\\\" placeholder=\\\"Confirm Password\\\" class=\\\"form-control\\\"/>\\r\\n                            </div>\\r\\n\\r\\n                          <!-- Button -->\\r\\n                          <div class=\\\"form-group text-center\\\">\\r\\n                              <label for=\\\"remember-me\\\" class=\\\"text-info text-dark\\\"><span>Remember me</span> <span><input id=\\\"remember-me\\\" name=\\\"remember-me\\\" type=\\\"checkbox\\\"></span></label><br>\\r\\n                              <input type=\\\"submit\\\" value=\\\"Register\\\" class=\\\"btn btn-info btn-md btn-dark\\\"/>\\r\\n                          </div>\\r\\n                      </form>\\r\\n                  </div>\\r\\n              </div>\\r\\n          </div>\\r\\n      </div>\\r\\n      <div class=\\\"text-center\\\" *ngIf='errors.length > 0' style='color:red;'>\\r\\n          <h6 *ngFor='let error of errors'>{{error}}</h6>\\r\\n        </div>\\r\\n  </div>\\r\\n  \\r\\n\\r\\n\\r\\n  </body>\"","import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute, Params, Router } from '@angular/router';\r\nimport { HttpService } from '../http.service';\r\n\r\n@Component({\r\n  selector: 'app-register',\r\n  templateUrl: './register.component.html',\r\n  styleUrls: ['./register.component.css']\r\n})\r\nexport class RegisterComponent implements OnInit {\r\n  registerUser = { first_name: '', last_name: '', username:'', email:'', password:''}\r\n  // declare a variable to hold the confirm password field (compare against the user password)\r\n  register = {confirm_pass:''} \r\n  errors = [];\r\n  constructor(\r\n    private _httpService: HttpService,\r\n    private _route: ActivatedRoute,\r\n    private _router: Router\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    this._route.params.subscribe((params: Params) => {\r\n      console.log(params['id']);\r\n    });\r\n  }\r\n\r\n  onRegister(){\r\n    if(this.registerUser.password !== this.register.confirm_pass){\r\n      this.errors = [];\r\n      this.errors.push(\"The passwords do not match\");\r\n      console.log(\"error: \", this.errors)\r\n    }\r\n    console.log(\"#2: In login component ts\", this.registerUser);\r\n    let tempObservable = this._httpService.registerThisUser(this.registerUser);\r\n    tempObservable.subscribe(data => {\r\n      console.log(\" #6 Register component got the new user\", data);\r\n      this.errors = [];\r\n      if(data['message'] === 'error'){\r\n        console.log(\"This is our error data \", data);\r\n        var errorsResponse = data['errors']['errors'];\r\n        for(var key in errorsResponse){\r\n          var errString = errorsResponse[key]['message'];\r\n          this.errors.push(errString);\r\n        }\r\n        if(data['errors']['code'] === 11000){\r\n          this.errors.push(\"This username/email already exist\");\r\n        } \r\n      } else {\r\n        console.log(\"username from registration: \", data['username']);\r\n        var username = data['username'];\r\n        sessionStorage.setItem('username', username);\r\n        // this._router.navigate(['user/' + data['username']]);\r\n        this._router.navigate(['user/', username]);\r\n      }\r\n    })\r\n  }\r\n  goHome() {\r\n    this._router.navigate(['']);\r\n  }\r\n}","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":""}