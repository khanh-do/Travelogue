{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/dashboard/dashboard.component.css","webpack:///./src/app/dashboard/dashboard.component.html","webpack:///./src/app/dashboard/dashboard.component.ts","webpack:///./src/app/http.service.ts","webpack:///./src/app/login/login.component.css","webpack:///./src/app/login/login.component.html","webpack:///./src/app/login/login.component.ts","webpack:///./src/app/register/register.component.css","webpack:///./src/app/register/register.component.html","webpack:///./src/app/register/register.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { LoginComponent  } from './login/login.component';\r\nimport { RegisterComponent  } from './register/register.component';\r\nimport { DashboardComponent  } from './dashboard/dashboard.component';\r\n\r\nconst routes: Routes = [\r\n  \r\n  { path: 'register', component: RegisterComponent },\r\n  { path: 'user/:username', component: DashboardComponent },\r\n  { path: '', component: LoginComponent },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<!--The content below is only a placeholder and can be replaced.-->\\r\\n<div style=\\\"text-align:center\\\">\\r\\n  <h1>\\r\\n    {{ title }}\\r\\n  </h1>\\r\\n  \\r\\n\\r\\n<router-outlet></router-outlet>\\r\\n\"","import { Component } from '@angular/core';\r\nimport { HttpService } from './http.service';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent {\r\n  title = 'Travelogue';\r\n  constructor(private _httpService: HttpService){}\r\n}\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { AppComponent } from './app.component';\r\nimport { HttpService } from './http.service';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { LoginComponent } from './login/login.component';\r\nimport { RegisterComponent } from './register/register.component';\r\nimport { DashboardComponent } from './dashboard/dashboard.component';\r\nimport { AgmCoreModule } from '@agm/core';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    LoginComponent,\r\n    RegisterComponent,\r\n    DashboardComponent,\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    FormsModule,\r\n    AppRoutingModule,\r\n    HttpClientModule,\r\n    AgmCoreModule.forRoot({\r\n      apiKey: ''      \r\n    })\r\n  ],\r\n  providers: [HttpService],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","module.exports = \"agm-map { \\r\\n    height: 600px; /* height is required */ \\r\\n    \\r\\n}\\r\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvZGFzaGJvYXJkL2Rhc2hib2FyZC5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0ksYUFBYSxFQUFFLHVCQUF1Qjs7QUFFMUMiLCJmaWxlIjoic3JjL2FwcC9kYXNoYm9hcmQvZGFzaGJvYXJkLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyJhZ20tbWFwIHsgXHJcbiAgICBoZWlnaHQ6IDYwMHB4OyAvKiBoZWlnaHQgaXMgcmVxdWlyZWQgKi8gXHJcbiAgICBcclxufVxyXG4iXX0= */\"","module.exports = \"<p *ngIf='selectedMarker'>Lat: {{ selectedMarker.lat }} Lng: {{ selectedMarker.lng }}</p>\\r\\n<agm-map \\r\\n  [latitude]='latitude'\\r\\n\\t[longitude]='longitude'\\r\\n\\t[zoom]='2.5'\\r\\n\\t(mapClick)='addMarker($event.coords.lat, $event.coords.lng)'>\\r\\n\\t<agm-marker\\r\\n\\t\\t*ngFor='let marker of markers'\\r\\n\\t\\t[latitude]='marker.lat'\\r\\n\\t\\t[longitude]='marker.lng'\\r\\n\\t\\t[opacity]='marker.alpha'\\r\\n\\t\\t[markerDraggable]='true'\\r\\n\\t\\t(markerClick)='selectMarker($event)'\\r\\n\\t\\t>\\r\\n\\t\\t</agm-marker>\\r\\n>\\r\\n</agm-map>\\r\\n\\r\\n<div *ngIf='showForm'>\\r\\n\\t<form (submit)=\\\"addCity()\\\">\\r\\n\\t\\t<p>City:</p>\\r\\n\\t\\t<input [(ngModel)]=\\\"newLocation.city\\\" type=\\\"text\\\" name=\\\"newLocation.city\\\" placeholder=\\\"City\\\"/>\\r\\n\\t\\t<p>State:</p>\\r\\n\\t\\t<input [(ngModel)]=\\\"newLocation.state\\\" type=\\\"text\\\" name=\\\"newLocation.state\\\" placeholder=\\\"State\\\"/>\\r\\n\\t\\t<p>Country:</p>\\r\\n\\t\\t<input [(ngModel)]=\\\"newLocation.country\\\" type=\\\"text\\\" name=\\\"newLocation.country\\\" placeholder=\\\"Country\\\"/>\\r\\n\\t\\t<p>Latitude:</p>\\r\\n\\t\\t<input [(ngModel)]=\\\"newLocation.latitude\\\" type=\\\"number\\\" name=\\\"newLocation.latitude\\\" placeholder=\\\"Latitude\\\"/>\\r\\n\\t\\t<p>Longitude:</p>\\r\\n\\t\\t<input [(ngModel)]=\\\"newLocation.longitude\\\" type='number' name=\\\"newLocation.longitude\\\" placeholder=\\\"Longitude\\\"/><br>\\r\\n\\t\\t<br>\\r\\n\\t\\t<input type=\\\"submit\\\" value=\\\"Save This Location\\\"/>\\r\\n\\t</form>\\r\\n</div>\\r\\n\\r\\n\\r\\n\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport { getDefaultService } from 'selenium-webdriver/edge';\r\nimport { HttpService } from '../http.service';\r\nimport { ActivatedRoute, Params, Router } from '@angular/router';\r\n// import { MapsAPILoader, AgmMap } from '@agm/core';\r\n// import { GoogleMapsAPIWrapper } from '@agm/core/services';\r\n// import { google } from '@agm/core/services/google-maps-types';\r\n\r\n@Component({\r\n  selector: 'app-dashboard',\r\n  templateUrl: './dashboard.component.html',\r\n  styleUrls: ['./dashboard.component.css'],\r\n  // styles: ['agm-map { height: 600px; /* height is required */ }'],\r\n  // template: `\r\n  //   <agm-map [zoom]=\"2.5\">\r\n  //   </agm-map>\r\n  // `\r\n})\r\nexport class DashboardComponent implements OnInit {\r\n  lat = 43.879078;\r\n  lng = -103.4615581;\r\n  selectedMarker;\r\n  // Declare an empty array to hold coordinates obtained from the database for logged in user\r\n  markers = [\r\n    // These are all just random coordinates from https://www.random.org/geographic-coordinates/\r\n    // { lat: 22.33159, lng: 105.63233},\r\n    // { lat: 7.92658, lng: -12.05228},\r\n    // { lat: 48.75606, lng: -118.85900},\r\n    // { lat: 5.19334, lng: -67.03352},\r\n    // { lat: 12.09407, lng: 26.31618},\r\n    // { lat: 47.92393, lng: 78.58339}\r\n  ];\r\n  username = \"KhanhDo\";\r\n  errors = [];\r\n  showForm = false;\r\n  newLocation = {city: '', state: '', country: '', latitude: 0, longitude: 0};\r\n  geocoder;\r\n\r\n  constructor(\r\n    private _httpService: HttpService,\r\n    private _route: ActivatedRoute,\r\n    private _router: Router,\r\n    // public mapsApiLoader: MapsAPILoader,\r\n    // private wrapper: GoogleMapsAPIWrapper    \r\n    ) {\r\n    //   this.mapsApiLoader = mapsApiLoader;\r\n    // this.wrapper = wrapper;\r\n    // this.mapsApiLoader.load().then(() => {\r\n    //   this.geocoder = new google.maps.Geocoder();\r\n    // });\r\n     }\r\n\r\n  ngOnInit() {\r\n    // The following method gets the user from the database,\r\n    // extracts the locations array from the user's info, and\r\n    // adds the locations' coordinates to the markers array (invoke the addMarker method)\r\n    this.getUser(this.username);\r\n  }\r\n\r\n  getUser(username){\r\n    // console.log(\"#2: In dashboard component ts\", this.username);\r\n    let tempObservable = this._httpService.getThisUser(this.username);\r\n    tempObservable.subscribe(data => {\r\n      // console.log(\"Got our user!\", data);\r\n      // console.log(data['data']['locations'])\r\n      for(var i=0; i<data['data']['locations'].length; i++){\r\n        // console.log(data['data']['locations'][i].coordinates);\r\n        // this.markers.push(data['data']['locations'][i].coordinates)\r\n        this.markers.push(data['data']['locations'][i].coordinates)\r\n      }   \r\n    })\r\n  }\r\n\r\n  // **Need to modify this method to bring up the info window which asks the user to add, autopopulating with the coords. and City, State name\r\n  addMarker(lat: number, lng: number) {\r\n    console.log(\"Lat: \", lat)\r\n    console.log(\"Long: \", lng)\r\n    this.markers.push({ lat, lng, alpha: 0.6 });\r\n    this.showForm = true;\r\n    this.newLocation.latitude = lat;\r\n    this.newLocation.longitude = lng;\r\n\r\n    // findAddressByCoordinates() {\r\n      // this.geocoder.geocode({\r\n      //   'location': {\r\n      //     lat: this.newLocation.latitude,\r\n      //     lng: this.newLocation.longitude\r\n      //   }\r\n      // }, (results, status) => {\r\n      //   console.log(results);\r\n      // })\r\n    // }\r\n  }\r\n\r\n  max(coordType: 'lat' | 'lng'): number {\r\n    return Math.max(...this.markers.map(marker => marker[coordType]));\r\n  }\r\n\r\n  min(coordType: 'lat' | 'lng'): number {\r\n    return Math.min(...this.markers.map(marker => marker[coordType]));\r\n  }\r\n\r\n  selectMarker(event) {\r\n    console.log(event)\r\n    this.selectedMarker = {\r\n      lat: event.latitude,\r\n      lng: event.longitude\r\n    };\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class HttpService {\r\n\r\n  constructor(private _http: HttpClient){}\r\n\r\n  loginThisUser(user){\r\n    // console.log(\"#3 in http.service.ts user: \", user);\r\n    return this._http.post('/login', user);\r\n  }\r\n\r\n  registerThisUser(user){\r\n    // console.log(\"#3 in http.service.ts user: \", user);\r\n    return this._http.post('/create', user);\r\n  }\r\n\r\n  getThisUser(username){\r\n    // console.log(\"#3 in http.service.ts username: \", username);\r\n    return this._http.get('/userInfo/' + username);\r\n  }\r\n\r\n}\r\n","module.exports = \".login{\\r\\nbackground-image: url(https://images.pexels.com/photos/457882/pexels-photo-457882.jpeg?cs=srgb&dl=beach-calm-clouds-457882.jpg&fm=jpg);\\r\\nmin-height:900px;\\r\\n}\\r\\n\\r\\n\\r\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbG9naW4vbG9naW4uY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtBQUNBLHNJQUFzSTtBQUN0SSxnQkFBZ0I7QUFDaEIiLCJmaWxlIjoic3JjL2FwcC9sb2dpbi9sb2dpbi5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLmxvZ2lue1xyXG5iYWNrZ3JvdW5kLWltYWdlOiB1cmwoaHR0cHM6Ly9pbWFnZXMucGV4ZWxzLmNvbS9waG90b3MvNDU3ODgyL3BleGVscy1waG90by00NTc4ODIuanBlZz9jcz1zcmdiJmRsPWJlYWNoLWNhbG0tY2xvdWRzLTQ1Nzg4Mi5qcGcmZm09anBnKTtcclxubWluLWhlaWdodDo5MDBweDtcclxufVxyXG5cclxuXHJcbiJdfQ== */\"","module.exports = \"<div class=\\\"login\\\">\\r\\n<div class=\\\"container\\\">\\r\\n    <div class=\\\"row justify-content-md-center\\\">\\r\\n      <div class=\\\"col col-lg-2\\\">\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"col-md-auto\\\">\\r\\n          <div class=\\\"form-group border rounded center bg-white text-dark mt-5\\\">\\r\\n              <h3>Login:</h3>\\r\\n            <form (submit)=\\\"onLogin()\\\">\\r\\n            <p>Email:</p>\\r\\n               <input [(ngModel)]=\\\"loginUser.email\\\" type=\\\"text\\\" name=\\\"loginUser.email\\\" placeholder=\\\"Email\\\" class=\\\"form-control-sm\\\"/>\\r\\n               <p>Password:</p>\\r\\n               <input [(ngModel)]=\\\"loginUser.password\\\" type='password' name=\\\"loginUser.password\\\" placeholder=\\\"Password\\\" class=\\\"form-control-sm\\\"><br>\\r\\n               <!-- <button [routerLink]=\\\"['/user/:id']\\\">Login</button>&nbsp;&nbsp; -->\\r\\n               \\r\\n               <input type=\\\"submit\\\" value=\\\"Login\\\"/>\\r\\n          \\r\\n               <p>Need an account? <a [routerLink]=\\\"['/register']\\\">Sign up</a></p>\\r\\n          \\r\\n            </form>\\r\\n          </div>\\r\\n          \\r\\n          <div *ngIf='errors.length > 0' style='color:red;'>\\r\\n            <h6 *ngFor='let error of errors'>{{error}}</h6>\\r\\n          </div>\\r\\n      </div>\\r\\n      <div class=\\\"col col-lg-2\\\">\\r\\n\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n\\r\\n\\r\\n</div>\\r\\n\\r\\n\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport { HttpService } from '../http.service';\r\nimport { ActivatedRoute, Params, Router } from '@angular/router';\r\nimport { getCheckNoChangesMode } from '@angular/core/src/render3/state';\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.css']\r\n})\r\nexport class LoginComponent implements OnInit {\r\n  loginUser = { email: '', password: '' }\r\n  errors = [];\r\n\r\n  constructor(\r\n    private _httpService: HttpService,\r\n    private _route: ActivatedRoute,\r\n    private _router: Router\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  onLogin() {\r\n    console.log(\"#2: In login component ts\", this.loginUser);\r\n    let tempObservable = this._httpService.loginThisUser(this.loginUser);\r\n    tempObservable.subscribe(data => {\r\n      console.log(\"#6 login component got the user\", data);\r\n      this.errors = [];\r\n      if(data['message'] === 'User not found'){\r\n        console.log(\"Going back home\");\r\n        this.errors.push(\"Email/Password combination is not valid.\");\r\n      } else if(data['message'] === 'Password is null'){\r\n        console.log(\"No password\");\r\n        this.errors.push(\"Please enter your password.\");\r\n      } else if(data['message'] === \"The passwords don't match.\"){\r\n        console.log(\"Passwords don't match\")\r\n        this.errors.push(\"Email/Password combination is not valid.\");\r\n      }\r\n      // if(resp['message'] === 'error') {\r\n      //   console.log(\"This is our error data: \", resp);\r\n      //     // console.log(resp['errors']['errors']['name']['message'])\r\n        \r\n      //     var errorsResponse = resp['errors']['errors']\r\n\r\n      //     for(var key in errorsResponse){\r\n      //       var errString = key + ' - ' + errorsResponse[key]['message']\r\n      //       this.errors.push(errString)          \r\n      //     }  \r\n      //   if(resp['errors']['code'] === 11000){\r\n      //     this.errors.push(\"This author is a duplicate, please enter a unique author\")\r\n      //   }     \r\n        \r\n      // } else {\r\n      //   this.goHome();\r\n      // }\r\n    });\r\n  }\r\n\r\n  goHome() {\r\n    this._router.navigate(['']);\r\n  }\r\n  \r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3JlZ2lzdGVyL3JlZ2lzdGVyLmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<h3>Register:</h3>\\r\\n<div class=\\\"form\\\">\\r\\n  <form (submit)=\\\"onRegister()\\\">\\r\\n      <p>First Name:</p>\\r\\n      <input [(ngModel)]=\\\"registerUser.first_name\\\" type=\\\"text\\\" name=\\\"registerUser.first_name\\\" placeholder=\\\"First Name\\\"/>\\r\\n      <p>Last Name:</p>\\r\\n     <input [(ngModel)]=\\\"registerUser.last_name\\\" type=\\\"text\\\" name=\\\"registerUser.last_name\\\" placeholder=\\\"Last Name\\\"/>\\r\\n     <p>Username:</p>\\r\\n     <input [(ngModel)]=\\\"registerUser.username\\\" type=\\\"text\\\" name=\\\"registerUser.username\\\" placeholder=\\\"Username\\\"/>\\r\\n     <p>Email:</p>\\r\\n     <input [(ngModel)]=\\\"registerUser.email\\\" type=\\\"text\\\" name=\\\"registerUser.email\\\" placeholder=\\\"Email\\\"/>\\r\\n     <p>Password:</p>\\r\\n     <input [(ngModel)]=\\\"registerUser.password\\\" type='password' name=\\\"registerUser.password\\\" placeholder=\\\"Password\\\"><br>\\r\\n     <p>Confirm Password:</p>\\r\\n     <input [(ngModel)]=\\\"register.confirm_pass\\\" type=\\\"password\\\" name=\\\"register.confirm_pass\\\" placeholder=\\\"Confirm Password\\\"/>\\r\\n     <br>\\r\\n     <br>\\r\\n     <input type=\\\"submit\\\" value=\\\"Register\\\"/>\\r\\n\\r\\n  </form>\\r\\n</div>\\r\\n\\r\\n<div *ngIf='errors.length > 0' style='color:red;'>\\r\\n  <h6 *ngFor='let error of errors'>{{error}}</h6>\\r\\n</div>\"","import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute, Params, Router } from '@angular/router';\r\nimport { HttpService } from '../http.service';\r\n\r\n@Component({\r\n  selector: 'app-register',\r\n  templateUrl: './register.component.html',\r\n  styleUrls: ['./register.component.css']\r\n})\r\nexport class RegisterComponent implements OnInit {\r\n  registerUser = { first_name: '', last_name: '', username:'', email:'', password:''}\r\n  errors = [];\r\n  register={confirm_pass:''}\r\n \r\n\r\n  constructor(\r\n    private _httpService: HttpService,\r\n    private _route: ActivatedRoute,\r\n    private _router: Router\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    this._route.params.subscribe((params: Params) => {\r\n      console.log(params['id'])\r\n  });\r\n  }\r\n  onRegister(){\r\n    if(this.registerUser.password !== this.register.confirm_pass){\r\n      this.errors = [];\r\n      this.errors.push(\"The passwords do not match\");\r\n      console.log(\"error: \", this.errors)\r\n    }\r\n    console.log(\"#2: In login component ts\", this.registerUser);\r\n    let tempObservable = this._httpService.registerThisUser(this.registerUser);\r\n    tempObservable.subscribe(data => {\r\n      console.log(\" #6 Register component got the new user\", data);\r\n    this.errors = [];\r\n    if(data['message'] === 'error'){\r\n      console.log(\"This is our error data \", data);\r\n      var errorsResponse = data['errors']['errors']\r\n\r\n      for(var key in errorsResponse){\r\n        var errString = key + '-' + errorsResponse[key]['message']\r\n        this.errors.push(errString)\r\n      }\r\n      if(data['errors']['code'] === 11000){\r\n        this.errors.push(\"This username/email already exist\")\r\n      } \r\n    } else {\r\n      this._router.navigate(['user/' + data['username']])\r\n    }\r\n\r\n    })\r\n  }\r\n  goHome() {\r\n    this._router.navigate(['']);\r\n  }\r\n \r\n\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":""}