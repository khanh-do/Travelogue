{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/dashboard/dashboard.component.css","webpack:///./src/app/dashboard/dashboard.component.html","webpack:///./src/app/dashboard/dashboard.component.ts","webpack:///./src/app/details/details.component.css","webpack:///./src/app/details/details.component.html","webpack:///./src/app/details/details.component.ts","webpack:///./src/app/http.service.ts","webpack:///./src/app/login/login.component.css","webpack:///./src/app/login/login.component.html","webpack:///./src/app/login/login.component.ts","webpack:///./src/app/register/register.component.css","webpack:///./src/app/register/register.component.html","webpack:///./src/app/register/register.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { LoginComponent  } from './login/login.component';\nimport { RegisterComponent  } from './register/register.component';\nimport { DashboardComponent  } from './dashboard/dashboard.component';\n\nconst routes: Routes = [\n  \n  { path: 'register', component: RegisterComponent },\n  { path: 'user/:username', component: DashboardComponent },\n  { path: '', component: LoginComponent },\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<!--The content below is only a placeholder and can be replaced.-->\\n<div style=\\\"text-align:center\\\">\\n  <!-- <h1>\\n    {{ title }}\\n  </h1> -->\\n  \\n\\n<router-outlet></router-outlet>\\n\"","import { Component } from '@angular/core';\nimport { HttpService } from './http.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'Travelogue';\n  constructor(private _httpService: HttpService){}\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { AppComponent } from './app.component';\nimport { HttpService } from './http.service';\nimport { HttpClientModule } from '@angular/common/http';\nimport { AppRoutingModule } from './app-routing.module';\nimport { LoginComponent } from './login/login.component';\nimport { RegisterComponent } from './register/register.component';\nimport { DashboardComponent } from './dashboard/dashboard.component';\nimport { AgmCoreModule } from '@agm/core';\nimport { DetailsComponent } from './details/details.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    LoginComponent,\n    RegisterComponent,\n    DashboardComponent,\n    DetailsComponent,\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    AppRoutingModule,\n    HttpClientModule,\n    AgmCoreModule.forRoot({\n      apiKey: ''      \n    })\n  ],\n  providers: [HttpService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","module.exports = \"agm-map { \\n    height: 600px; /* height is required */ \\n    \\n}\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvZGFzaGJvYXJkL2Rhc2hib2FyZC5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0ksYUFBYSxFQUFFLHVCQUF1Qjs7QUFFMUMiLCJmaWxlIjoic3JjL2FwcC9kYXNoYm9hcmQvZGFzaGJvYXJkLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyJhZ20tbWFwIHsgXG4gICAgaGVpZ2h0OiA2MDBweDsgLyogaGVpZ2h0IGlzIHJlcXVpcmVkICovIFxuICAgIFxufVxuIl19 */\"","module.exports = \"<nav class=\\\"navbar navbar-expand-lg navbar-light bg-light\\\">\\n\\n\\t<div class=\\\"collapse navbar-collapse\\\" id=\\\"navbarSupportedContent\\\">\\n\\t\\t<ul class=\\\"navbar-nav mr-auto\\\">\\n\\t\\t\\t<li class=\\\"nav-item active\\\">\\n\\t\\t\\t\\t<a class=\\\"nav-link\\\" href=\\\"#\\\">Home <span class=\\\"sr-only\\\">(current)</span></a>\\n\\t\\t\\t</li>\\n\\t\\t\\t<li class=\\\"nav-item\\\">\\n\\t\\t\\t\\t<a class=\\\"nav-link\\\" href=\\\"#\\\">Add Destination</a>\\n\\t\\t\\t</li>\\n\\t\\t\\t<li class=\\\"nav-item\\\">\\n\\t\\t\\t\\t<a class=\\\"nav-link\\\" href=\\\"#\\\">Edit Profile</a>\\n\\t\\t\\t</li>\\n\\t\\t\\t<li class=\\\"nav-item\\\">\\n\\t\\t\\t\\t<a class=\\\"nav-link\\\" href=\\\"#\\\">Logout</a>\\n\\t\\t\\t</li>\\n\\t\\t</ul>\\n\\n\\t</div>\\n</nav>\\n\\n\\n<p *ngIf='selectedMarker'>Lat: {{ selectedMarker.lat }} Lng: {{ selectedMarker.lng }}</p>\\n<agm-map [latitude]='latitude' [longitude]='longitude' [zoom]='2.5' (mapClick)='addMarker($event.coords.lat, $event.coords.lng)'>\\n\\t<agm-marker *ngFor='let marker of markers' [latitude]='marker.lat' [longitude]='marker.lng' [opacity]='marker.alpha'\\n\\t [markerDraggable]='true' (markerClick)='selectMarker($event)'>\\n\\t</agm-marker>\\n\\t>\\n</agm-map>\\n\\n\\n<div *ngIf='showForm'>\\n\\t<form (submit)=\\\"addCity()\\\" class=\\\"form-inline text-center\\\">\\n\\t\\t<p>City:</p>\\n\\t\\t<input [(ngModel)]=\\\"newLocation.city\\\" type=\\\"text\\\" name=\\\"newLocation.city\\\" placeholder=\\\"City\\\" class=\\\"form-control\\\"/>\\n\\t\\t<p>State:</p>\\n\\t\\t<input [(ngModel)]=\\\"newLocation.state\\\" type=\\\"text\\\" name=\\\"newLocation.state\\\" placeholder=\\\"State\\\" class=\\\"form-control\\\"/>\\n\\t\\t<p>Country:</p>\\n\\t\\t<input [(ngModel)]=\\\"newLocation.country\\\" type=\\\"text\\\" name=\\\"newLocation.country\\\" placeholder=\\\"Country\\\" class=\\\"form-control\\\"/>\\n\\t\\t<!-- <p>Latitude:</p> -->\\n\\t\\t<input [(ngModel)]=\\\"newLocation.latitude\\\" type=\\\"hidden\\\" name=\\\"newLocation.latitude\\\" placeholder=\\\"Latitude\\\" class=\\\"form-control\\\"/>\\n\\t\\t<!-- <p>Longitude:</p> -->\\n\\t\\t<input [(ngModel)]=\\\"newLocation.longitude\\\" type='hidden' name=\\\"newLocation.longitude\\\" placeholder=\\\"Longitude\\\" class=\\\"form-control\\\"/>\\n\\t\\t<input type=\\\"submit\\\" value=\\\"Save This Location\\\" />\\n\\t</form>\\n</div>\\n\\n<div>\\n\\t<app-details *ngIf=\\\"selectedLocation\\\" [locationToShow]=\\\"selectedLocation\\\"></app-details>\\n</div>\\n\\n\"","import { Component, OnInit } from '@angular/core';\nimport { getDefaultService } from 'selenium-webdriver/edge';\nimport { HttpService } from '../http.service';\nimport { ActivatedRoute, Params, Router } from '@angular/router';\n// import { MapsAPILoader, AgmMap } from '@agm/core';\n// import { GoogleMapsAPIWrapper } from '@agm/core/services';\n// import { google } from '@agm/core/services/google-maps-types';\n\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.css'],\n  // styles: ['agm-map { height: 600px; /* height is required */ }'],\n  // template: `\n  //   <agm-map [zoom]=\"2.5\">\n  //   </agm-map>\n  // `\n})\nexport class DashboardComponent implements OnInit {\n  lat = 43.879078;\n  lng = -103.4615581;\n  selectedMarker;\n  // Declare an empty array to hold coordinates obtained from the database for logged in user\n  markers = [\n    // These are all just random coordinates from https://www.random.org/geographic-coordinates/\n    // { lat: 22.33159, lng: 105.63233},\n    // { lat: 7.92658, lng: -12.05228},\n    // { lat: 48.75606, lng: -118.85900},\n    // { lat: 5.19334, lng: -67.03352},\n    // { lat: 12.09407, lng: 26.31618},\n    // { lat: 47.92393, lng: 78.58339}\n  ];\n  username = \"\";\n  errors = [];\n  // A new location form will show when this variable is set to true\n  showForm = false;\n  newLocation = {city: '', state: '', country: '', latitude: 0, longitude: 0};\n  geocoder;\n  selectedLocation={};\n\n  constructor(\n    private _httpService: HttpService,\n    private _route: ActivatedRoute,\n    private _router: Router,\n    // public mapsApiLoader: MapsAPILoader,\n    // private wrapper: GoogleMapsAPIWrapper    \n    ) {\n    //   this.mapsApiLoader = mapsApiLoader;\n    // this.wrapper = wrapper;\n    // this.mapsApiLoader.load().then(() => {\n    //   this.geocoder = new google.maps.Geocoder();\n    // });\n     }\n\n  ngOnInit() {\n    // The following method gets the user from the database if the username is stored in session,\n    // extracts the locations array from the user's info, and\n    // adds the locations' coordinates to the markers array\n    console.log(\"from storage:\", sessionStorage.getItem('username'));\n    let sessionUsername = sessionStorage.getItem('username');\n    this._route.params.subscribe((params: Params) => {\n      console.log(\"From URL: \" + params['username']);\n      this.username = params['username'];\n      if(sessionUsername === this.username){\n        this.getUser(this.username);\n      }else{\n        this.goHome();\n      }\n    });            \n  }\n\n  getUser(username){\n    // console.log(\"#2: In dashboard component ts\", this.username);\n    let tempObservable = this._httpService.getThisUser(this.username);\n    tempObservable.subscribe(data => {\n      console.log(\"Got our user!\", data);\n      // console.log(data['data']['locations'])\n      for(var i=0; i<data['data']['locations'].length; i++){\n        // console.log(data['data']['locations'][i].coordinates);\n        // this.markers.push(data['data']['locations'][i].coordinates)\n        this.markers.push(data['data']['locations'][i].coordinates)\n      }   \n      this.selectedLocation = data['data']['locations'][0]\n      console.log(\"--------->check here: \", this.selectedLocation)\n      console.log(\"--------->check here: \", data)\n    })\n  }\n\n  // **Need to modify this method to bring up the info window which asks the user to add, autopopulating with the coords. and City, State name\n  addMarker(lat: number, lng: number) {\n    console.log(\"Lat: \", lat)\n    console.log(\"Long: \", lng)\n    this.markers.push({ lat, lng, alpha: 0.6 });\n    this.showForm = true;\n    this.newLocation.latitude = lat;\n    this.newLocation.longitude = lng;\n\n    // findAddressByCoordinates() {\n      // this.geocoder.geocode({\n      //   'location': {\n      //     lat: this.newLocation.latitude,\n      //     lng: this.newLocation.longitude\n      //   }\n      // }, (results, status) => {\n      //   console.log(results);\n      // })\n    // }\n  }\n\n  max(coordType: 'lat' | 'lng'): number {\n    return Math.max(...this.markers.map(marker => marker[coordType]));\n  }\n\n  min(coordType: 'lat' | 'lng'): number {\n    return Math.min(...this.markers.map(marker => marker[coordType]));\n  }\n\n  selectMarker(event) {\n    console.log(event)\n    this.selectedMarker = {\n      lat: event.latitude,\n      lng: event.longitude\n    };\n  }\n  goHome() {\n    this._router.navigate(['']);\n  }\n}\n","module.exports = \".rating{\\n    -webkit-transform: rotateY(180deg);\\n            transform: rotateY(180deg);\\n    display:flex;\\n}\\n\\n.rating input{\\n\\n    display:none;\\n}\\n\\n.rating label{\\n    display:block;\\n    cursor: pointer;\\n    width:50px;\\n    /* background: #ccc; */\\n}\\n\\n.rating label:before{\\n    content:'\\\\f005';\\n    font-family: fontAwesome;\\n    position: relative;\\n    display: block;\\n    font-size:50px;\\n    color: gray;\\n}\\n\\n.rating label:after{\\n    content:'\\\\f005';\\n    font-family: fontAwesome;\\n    position: absolute;\\n    display: block;\\n    font-size:50px;\\n    color:yellow;\\n    top:0;\\n    opacity: 0;\\n    transition: .5s;\\n    text-shadow: 0 2px 5px rgba(0,0,0,.5);\\n}\\n\\n.rating label:hover:after,\\n.rating label:hover ~ label:after,\\n.rating input:checked ~ label:after\\n{\\n    opacity:1;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvZGV0YWlscy9kZXRhaWxzLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSxrQ0FBMEI7WUFBMUIsMEJBQTBCO0lBQzFCLFlBQVk7QUFDaEI7O0FBRUE7O0lBRUksWUFBWTtBQUNoQjs7QUFFQTtJQUNJLGFBQWE7SUFDYixlQUFlO0lBQ2YsVUFBVTtJQUNWLHNCQUFzQjtBQUMxQjs7QUFFQTtJQUNJLGVBQWU7SUFDZix3QkFBd0I7SUFDeEIsa0JBQWtCO0lBQ2xCLGNBQWM7SUFDZCxjQUFjO0lBQ2QsV0FBVztBQUNmOztBQUVBO0lBQ0ksZUFBZTtJQUNmLHdCQUF3QjtJQUN4QixrQkFBa0I7SUFDbEIsY0FBYztJQUNkLGNBQWM7SUFDZCxZQUFZO0lBQ1osS0FBSztJQUNMLFVBQVU7SUFDVixlQUFlO0lBQ2YscUNBQXFDO0FBQ3pDOztBQUVBOzs7O0lBSUksU0FBUztBQUNiIiwiZmlsZSI6InNyYy9hcHAvZGV0YWlscy9kZXRhaWxzLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIucmF0aW5ne1xuICAgIHRyYW5zZm9ybTogcm90YXRlWSgxODBkZWcpO1xuICAgIGRpc3BsYXk6ZmxleDtcbn1cblxuLnJhdGluZyBpbnB1dHtcblxuICAgIGRpc3BsYXk6bm9uZTtcbn1cblxuLnJhdGluZyBsYWJlbHtcbiAgICBkaXNwbGF5OmJsb2NrO1xuICAgIGN1cnNvcjogcG9pbnRlcjtcbiAgICB3aWR0aDo1MHB4O1xuICAgIC8qIGJhY2tncm91bmQ6ICNjY2M7ICovXG59XG5cbi5yYXRpbmcgbGFiZWw6YmVmb3Jle1xuICAgIGNvbnRlbnQ6J1xcZjAwNSc7XG4gICAgZm9udC1mYW1pbHk6IGZvbnRBd2Vzb21lO1xuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgICBkaXNwbGF5OiBibG9jaztcbiAgICBmb250LXNpemU6NTBweDtcbiAgICBjb2xvcjogZ3JheTtcbn1cblxuLnJhdGluZyBsYWJlbDphZnRlcntcbiAgICBjb250ZW50OidcXGYwMDUnO1xuICAgIGZvbnQtZmFtaWx5OiBmb250QXdlc29tZTtcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgZGlzcGxheTogYmxvY2s7XG4gICAgZm9udC1zaXplOjUwcHg7XG4gICAgY29sb3I6eWVsbG93O1xuICAgIHRvcDowO1xuICAgIG9wYWNpdHk6IDA7XG4gICAgdHJhbnNpdGlvbjogLjVzO1xuICAgIHRleHQtc2hhZG93OiAwIDJweCA1cHggcmdiYSgwLDAsMCwuNSk7XG59XG5cbi5yYXRpbmcgbGFiZWw6aG92ZXI6YWZ0ZXIsXG4ucmF0aW5nIGxhYmVsOmhvdmVyIH4gbGFiZWw6YWZ0ZXIsXG4ucmF0aW5nIGlucHV0OmNoZWNrZWQgfiBsYWJlbDphZnRlclxue1xuICAgIG9wYWNpdHk6MTtcbn0iXX0= */\"","module.exports = \"<div class=\\\"justify-content-center align-items-center\\\">\\n\\n  <h1 class=\\\"text-center text-dark pt-3\\\">{{locationToShow.city}}, {{locationToShow.state}}</h1>\\n  <h2>{{locationToShow.country}}</h2>\\n\\n</div>\\n\\n<div *ngFor='let attraction of locationToShow.attractions'>\\n  <p>Attraction: {{attraction.name}}</p>\\n  <p>Rating: {{attraction.rating}}</p>\\n  <p>Review: {{attraction.review}}</p>\\n</div>\\n\\n\\n\\n<div class=\\\"row justify-content-center align-items-center\\\">\\n  <form (submit)=\\\"addAttraction()\\\">\\n    <h3 class=\\\"text-center text-dark pt-3\\\">Add New Attraction</h3>\\n  \\n    <div class=\\\"form-group text-center\\\">\\n      <input type=\\\"text\\\" name=\\\"\\\" placeholder=\\\"Attraction\\\"\\n        class=\\\"form-control\\\" />\\n    </div>\\n \\n    <div class=\\\"form-group text-center\\\">\\n      <input type=\\\"text\\\" name=\\\"\\\" placeholder=\\\"Review\\\" class=\\\"form-control\\\" />\\n    </div>\\n  \\n    <div class=\\\"form-group text-center\\\">\\n      <div class=\\\"rating\\\">\\n        <input type=\\\"radio\\\" name=\\\"star\\\" id=\\\"star1\\\"><label for=\\\"star1\\\" class=\\\"form-check\\\"></label>\\n        <input type=\\\"radio\\\" name=\\\"star\\\" id=\\\"star2\\\"><label for=\\\"star2\\\" class=\\\"form-check\\\"></label>\\n        <input type=\\\"radio\\\" name=\\\"star\\\" id=\\\"star3\\\"><label for=\\\"star3\\\" class=\\\"form-check\\\"></label>\\n        <input type=\\\"radio\\\" name=\\\"star\\\" id=\\\"star4\\\"><label for=\\\"star4\\\" class=\\\"form-check\\\"></label>\\n        <input type=\\\"radio\\\" name=\\\"star\\\" id=\\\"star5\\\"><label for=\\\"star5\\\" class=\\\"form-check\\\"></label>\\n      </div>\\n\\n    </div>\\n\\n      <div class=\\\"form-group text-center\\\">\\n      <input type=\\\"submit\\\" value=\\\"Add\\\" class=\\\"btn btn-info btn-md btn-dark\\\" />\\n    </div>\\n  </form>\\n</div>\"","import { Component, OnInit, Input } from '@angular/core';\n\n@Component({\n  selector: 'app-details',\n  templateUrl: './details.component.html',\n  styleUrls: ['./details.component.css']\n})\nexport class DetailsComponent implements OnInit {\n  @Input () locationToShow: any;\n  constructor() { }\n  ngOnInit() { }\n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class HttpService {\n\n  constructor(private _http: HttpClient){}\n\n  loginThisUser(user){\n    // console.log(\"#3 in http.service.ts user: \", user);\n    return this._http.post('/login', user);\n  }\n\n  registerThisUser(user){\n    // console.log(\"#3 in http.service.ts user: \", user);\n    return this._http.post('/create', user);\n  }\n\n  getThisUser(username){\n    // console.log(\"#3 in http.service.ts username: \", username);\n    return this._http.get('/userInfo/' + username);\n  }\n\n}\n","module.exports = \".login {\\n    background-image: url(https://images.pexels.com/photos/457882/pexels-photo-457882.jpeg?cs=srgb&dl=beach-calm-clouds-457882.jpg&fm=jpg);\\n    background-size: cover;\\n    padding: 60px;\\n    min-height: 800px;\\n    font-family:Arial, Helvetica, sans-serif\\n}\\nh1 {\\n    font-family: Apple Chancery;\\n}\\n\\n\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbG9naW4vbG9naW4uY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtJQUNJLHNJQUFzSTtJQUN0SSxzQkFBc0I7SUFDdEIsYUFBYTtJQUNiLGlCQUFpQjtJQUNqQjtBQUNKO0FBQ0E7SUFDSSwyQkFBMkI7QUFDL0IiLCJmaWxlIjoic3JjL2FwcC9sb2dpbi9sb2dpbi5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLmxvZ2luIHtcbiAgICBiYWNrZ3JvdW5kLWltYWdlOiB1cmwoaHR0cHM6Ly9pbWFnZXMucGV4ZWxzLmNvbS9waG90b3MvNDU3ODgyL3BleGVscy1waG90by00NTc4ODIuanBlZz9jcz1zcmdiJmRsPWJlYWNoLWNhbG0tY2xvdWRzLTQ1Nzg4Mi5qcGcmZm09anBnKTtcbiAgICBiYWNrZ3JvdW5kLXNpemU6IGNvdmVyO1xuICAgIHBhZGRpbmc6IDYwcHg7XG4gICAgbWluLWhlaWdodDogODAwcHg7XG4gICAgZm9udC1mYW1pbHk6QXJpYWwsIEhlbHZldGljYSwgc2Fucy1zZXJpZlxufVxuaDEge1xuICAgIGZvbnQtZmFtaWx5OiBBcHBsZSBDaGFuY2VyeTtcbn1cblxuXG4iXX0= */\"","module.exports = \"<!-- <div class=\\\"login\\\">\\n<div class=\\\"container\\\">\\n    <div class=\\\"row justify-content-md-center\\\">\\n      <div class=\\\"col col-lg-2\\\">\\n      </div>\\n\\n      <div class=\\\"col-md-auto\\\">\\n          <div class=\\\"form-group border rounded center bg-white text-dark mt-5\\\">\\n              <h3>Login</h3>\\n            <form (submit)=\\\"onLogin()\\\">\\n\\n               <input [(ngModel)]=\\\"loginUser.email\\\" type=\\\"text\\\" name=\\\"loginUser.email\\\" placeholder=\\\"Email\\\" class=\\\"form-control-sm\\\"/>\\n              <br>\\n               <input [(ngModel)]=\\\"loginUser.password\\\" type='password' name=\\\"loginUser.password\\\" placeholder=\\\"Password\\\" class=\\\"form-control-sm\\\"><br> -->\\n               <!-- <button [routerLink]=\\\"['/user/:id']\\\">Login</button>&nbsp;&nbsp; -->\\n               \\n               <!-- <input type=\\\"submit\\\" value=\\\"Login\\\"/>\\n          \\n               <p>Need an account? <a [routerLink]=\\\"['/register']\\\">Sign up</a></p>\\n          \\n            </form>\\n          </div>\\n          \\n          <div *ngIf='errors.length > 0' style='color:red;'>\\n            <h6 *ngFor='let error of errors'>{{error}}</h6>\\n          </div>\\n      </div>\\n      <div class=\\\"col col-lg-2\\\">\\n\\n      </div>\\n    </div>\\n</div>\\n\\n -->\\n\\n<!-- New code starts here: -->\\n<body>\\n\\t<div class=\\\"login\\\">\\n  \\n    <!-- <h3 class=\\\"text-center text-white pt-5\\\">Login form</h3> -->\\n    <div class=\\\"container\\\">\\n        <div id=\\\"login-row\\\" class=\\\"row justify-content-center align-items-center\\\">\\n            <div id=\\\"login-column\\\" class=\\\"col-md-3\\\">\\n                <div class=\\\"login-box col-md-12\\\">\\n                  \\n                    <form (submit) = \\\"onLogin()\\\" >\\n                        <h1 class=\\\"text-center\\\">Travelogue</h1>\\n                        <h5 class=\\\"text-center text-dark pt-3\\\">Log into your Account</h5>\\n                        <!-- Email -->\\n                        <div class=\\\"form-group text-center\\\">\\n                            <input [(ngModel)]=\\\"loginUser.email\\\" type=\\\"text\\\" name=\\\"loginUser.email\\\" placeholder=\\\"Email\\\" class=\\\"form-control\\\"/>\\n                          </div>\\n                        <!-- Password -->\\n                        <div class=\\\"form-group text-center\\\">\\n                            <input [(ngModel)]=\\\"loginUser.password\\\" type='password' name=\\\"loginUser.password\\\" placeholder=\\\"Password\\\" class=\\\"form-control\\\">\\n                        </div>\\n                        <!-- Button -->\\n                        <div class=\\\"form-group text-center\\\">\\n                            <label for=\\\"remember-me\\\" class=\\\"text-info text-dark\\\"><span>Remember me</span> <span><input id=\\\"remember-me\\\" name=\\\"remember-me\\\" type=\\\"checkbox\\\"></span></label><br>\\n                            <input type=\\\"submit\\\" value=\\\"Login\\\" class=\\\"btn btn-info btn-md btn-dark\\\"/>\\n                            <!-- <input type=\\\"submit\\\" name=\\\"submit\\\" class=\\\"btn btn-info btn-md\\\" value=\\\"submit\\\"> -->\\n                        </div>\\n\\n                        <div id=\\\"register-link\\\" class=\\\"text-center\\\">\\n                        <p>Need an account? <a [routerLink]=\\\"['/register']\\\">Sign up</a></p>\\n                        </div>\\n\\n                    </form>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n</div>\\n\\n<div *ngIf='errors.length > 0' style='color:red;'>\\n    <h6 *ngFor='let error of errors'>{{error}}</h6>\\n  </div>\\n\\n\\n</body>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { HttpService } from '../http.service';\nimport { ActivatedRoute, Params, Router } from '@angular/router';\nimport { getCheckNoChangesMode } from '@angular/core/src/render3/state';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n  loginUser = { email: '', password: '' }\n  errors = [];\n\n  constructor(\n    private _httpService: HttpService,\n    private _route: ActivatedRoute,\n    private _router: Router\n  ) { }\n\n  ngOnInit() {\n  }\n\n  onLogin() {\n    console.log(\"#2: In login component ts\", this.loginUser);\n    let tempObservable = this._httpService.loginThisUser(this.loginUser);\n    tempObservable.subscribe(data => {\n      console.log(\"#6 login component got the user\", data);\n      // Clear the errors array per every login attempt\n      this.errors = [];\n      if(data['message'] === 'Email is null'){\n        this.errors.push(\"Please enter your login email.\");\n      }else if(data['message'] === 'User not found'){\n        console.log(\"Going back home\");\n        this.errors.push(\"Email/Password combination is not valid.\");\n      }else if(data['message'] === 'Password is invalid'){\n        this.errors.push(\"Email/Password combination is not valid.\");\n      }else if(data['message'] === 'Password is null'){\n        console.log(\"No password\");\n        this.errors.push(\"Please enter your password.\");\n      } else if(data['message'] === \"The passwords don't match.\"){\n        console.log(\"Passwords don't match\")\n        this.errors.push(\"Email/Password combination is not valid.\");\n      } else {\n        // console.log(\"username: \", data['data']['username']);\n        var username = data['data']['username'];\n        // upon successful login, save username to Window.sessionStorage\n        sessionStorage.setItem('username', username);\n        // then redirect to the user's dashboard\n        this._router.navigate(['user/'+ username]);\n      }\n      \n      // if(resp['message'] === 'Error') {\n      //   console.log(\"This is our error data: \", resp);\n      //     // console.log(resp['errors']['errors']['name']['message'])\n        \n      //     var errorsResponse = resp['errors']['errors']\n\n      //     for(var key in errorsResponse){\n      //       var errString = errorsResponse[key]['message']\n      //       this.errors.push(errString)          \n      //     }  \n            \n      // } else {\n      //   this.goHome();\n      // }\n    });\n  }\n\n  goHome() {\n    this._router.navigate(['']);\n  }\n  \n}\n","module.exports = \".register {\\n    background-image: url(https://images.pexels.com/photos/876218/pexels-photo-876218.jpeg?cs=srgb&dl=architecture-benches-buildings-876218.jpg&fm=jpg);\\n    background-size: cover;\\n    padding: 60px;\\n    min-height: 800px;\\n    font-family:Arial, Helvetica, sans-serif\\n}\\nh1 {\\n    font-family: Apple Chancery;\\n}\\n#login-column {\\n    border: 2px solid rgba(126, 145, 173);\\n    background-color:rgba(126, 145, 173, 0.5);\\n    \\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvcmVnaXN0ZXIvcmVnaXN0ZXIuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtJQUNJLG1KQUFtSjtJQUNuSixzQkFBc0I7SUFDdEIsYUFBYTtJQUNiLGlCQUFpQjtJQUNqQjtBQUNKO0FBQ0E7SUFDSSwyQkFBMkI7QUFDL0I7QUFDQTtJQUNJLHFDQUFxQztJQUNyQyx5Q0FBeUM7O0FBRTdDIiwiZmlsZSI6InNyYy9hcHAvcmVnaXN0ZXIvcmVnaXN0ZXIuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi5yZWdpc3RlciB7XG4gICAgYmFja2dyb3VuZC1pbWFnZTogdXJsKGh0dHBzOi8vaW1hZ2VzLnBleGVscy5jb20vcGhvdG9zLzg3NjIxOC9wZXhlbHMtcGhvdG8tODc2MjE4LmpwZWc/Y3M9c3JnYiZkbD1hcmNoaXRlY3R1cmUtYmVuY2hlcy1idWlsZGluZ3MtODc2MjE4LmpwZyZmbT1qcGcpO1xuICAgIGJhY2tncm91bmQtc2l6ZTogY292ZXI7XG4gICAgcGFkZGluZzogNjBweDtcbiAgICBtaW4taGVpZ2h0OiA4MDBweDtcbiAgICBmb250LWZhbWlseTpBcmlhbCwgSGVsdmV0aWNhLCBzYW5zLXNlcmlmXG59XG5oMSB7XG4gICAgZm9udC1mYW1pbHk6IEFwcGxlIENoYW5jZXJ5O1xufVxuI2xvZ2luLWNvbHVtbiB7XG4gICAgYm9yZGVyOiAycHggc29saWQgcmdiYSgxMjYsIDE0NSwgMTczKTtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOnJnYmEoMTI2LCAxNDUsIDE3MywgMC41KTtcbiAgICBcbn0iXX0= */\"","module.exports = \"<!-- <h3>Register:</h3>\\n<div class=\\\"form\\\">\\n  <form (submit)=\\\"onRegister()\\\">\\n      <p>First Name:</p>\\n      <input [(ngModel)]=\\\"registerUser.first_name\\\" type=\\\"text\\\" name=\\\"registerUser.first_name\\\" placeholder=\\\"First Name\\\"/>\\n      <p>Last Name:</p>\\n     <input [(ngModel)]=\\\"registerUser.last_name\\\" type=\\\"text\\\" name=\\\"registerUser.last_name\\\" placeholder=\\\"Last Name\\\"/>\\n     <p>Username:</p>\\n     <input [(ngModel)]=\\\"registerUser.username\\\" type=\\\"text\\\" name=\\\"registerUser.username\\\" placeholder=\\\"Username\\\"/>\\n     <p>Email:</p>\\n     <input [(ngModel)]=\\\"registerUser.email\\\" type=\\\"text\\\" name=\\\"registerUser.email\\\" placeholder=\\\"Email\\\"/>\\n     <p>Password:</p>\\n     <input [(ngModel)]=\\\"registerUser.password\\\" type='password' name=\\\"registerUser.password\\\" placeholder=\\\"Password\\\"><br>\\n     <p>Confirm Password:</p>\\n     <input [(ngModel)]=\\\"register.confirm_pass\\\" type=\\\"password\\\" name=\\\"register.confirm_pass\\\" placeholder=\\\"Confirm Password\\\"/>\\n     <br>\\n     <br>\\n     <input type=\\\"submit\\\" value=\\\"Register\\\"/>\\n\\n  </form>\\n</div>\\n\\n<div *ngIf='errors.length > 0' style='color:red;'>\\n  <h6 *ngFor='let error of errors'>{{error}}</h6>\\n</div> -->\\n\\n<!-- New code starts here: -->\\n<body>\\n    <div class=\\\"register\\\">\\n    \\n      <!-- <h3 class=\\\"text-center text-white pt-5\\\">Login form</h3> -->\\n      <div class=\\\"container\\\">\\n          <div id=\\\"login-row\\\" class=\\\"row justify-content-center align-items-center \\\">\\n              <div id=\\\"login-column\\\" class=\\\"col-md-3 rounded\\\">\\n                  <div class=\\\"login-box col-md-12\\\">\\n                    \\n                      <form (submit)=\\\"onRegister()\\\" >\\n                          <h1 class=\\\"text-center\\\">Travelogue</h1>\\n                          <h5 class=\\\"text-center text-dark pt-3\\\">Register for an Account</h5>\\n                          <!-- First Name -->\\n                          <div class=\\\"form-group text-center\\\">\\n                              <input [(ngModel)]=\\\"registerUser.first_name\\\" type=\\\"text\\\" name=\\\"registerUser.first_name\\\" placeholder=\\\"First Name\\\" class=\\\"form-control\\\"/>\\n                            </div>\\n                          <!-- Last Name -->\\n                          <div class=\\\"form-group text-center\\\">\\n                              <input [(ngModel)]=\\\"registerUser.last_name\\\" type=\\\"text\\\" name=\\\"registerUser.last_name\\\" placeholder=\\\"Last Name\\\" class=\\\"form-control\\\"/>\\n                          </div>\\n                          <!-- First Username -->\\n                          <div class=\\\"form-group text-center\\\">\\n                              <input [(ngModel)]=\\\"registerUser.username\\\" type=\\\"text\\\" name=\\\"registerUser.username\\\" placeholder=\\\"Username\\\" class=\\\"form-control\\\"/>\\n                            </div>\\n                          <!-- Email -->\\n                          <div class=\\\"form-group text-center\\\">\\n                              <input [(ngModel)]=\\\"registerUser.email\\\" type=\\\"text\\\" name=\\\"registerUser.email\\\" placeholder=\\\"Email\\\" class=\\\"form-control\\\"/>\\n                            </div>\\n                          <!-- Password -->\\n                          <div class=\\\"form-group text-center\\\">\\n                              <input [(ngModel)]=\\\"registerUser.password\\\" type='password' name=\\\"registerUser.password\\\" placeholder=\\\"Password\\\" class=\\\"form-control\\\"/>\\n                            </div>\\n                          <!-- Confirm Password -->\\n                          <div class=\\\"form-group text-center\\\">\\n                              <input [(ngModel)]=\\\"register.confirm_pass\\\" type=\\\"password\\\" name=\\\"register.confirm_pass\\\" placeholder=\\\"Confirm Password\\\" class=\\\"form-control\\\"/>\\n                            </div>\\n\\n                          <!-- Button -->\\n                          <div class=\\\"form-group text-center\\\">\\n                              <label for=\\\"remember-me\\\" class=\\\"text-info text-light\\n                              \\\"><span>Remember me</span> <span><input id=\\\"remember-me\\\" name=\\\"remember-me\\\" type=\\\"checkbox\\\"></span></label><br>\\n                              <input type=\\\"submit\\\" value=\\\"Register\\\" class=\\\"btn btn-info btn-md btn-dark\\\"/>\\n                          </div>\\n                      </form>\\n                  </div>\\n              </div>\\n          </div>\\n      </div>\\n      <div class=\\\"text-center\\\" *ngIf='errors.length > 0' style='color:red;'>\\n          <h6 *ngFor='let error of errors'>{{error}}</h6>\\n        </div>\\n  </div>\\n  \\n\\n\\n  </body>\"","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Params, Router } from '@angular/router';\nimport { HttpService } from '../http.service';\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.css']\n})\nexport class RegisterComponent implements OnInit {\n  registerUser = { first_name: '', last_name: '', username:'', email:'', password:''}\n  // declare a variable to hold the confirm password field (compare against the user password)\n  register = {confirm_pass:''} \n  errors = [];\n  constructor(\n    private _httpService: HttpService,\n    private _route: ActivatedRoute,\n    private _router: Router\n  ) { }\n\n  ngOnInit() {\n    this._route.params.subscribe((params: Params) => {\n      console.log(params['id']);\n    });\n  }\n\n  onRegister(){\n    if(this.registerUser.password !== this.register.confirm_pass){\n      this.errors = [];\n      this.errors.push(\"The passwords do not match\");\n      console.log(\"error: \", this.errors)\n    }\n    console.log(\"#2: In login component ts\", this.registerUser);\n    let tempObservable = this._httpService.registerThisUser(this.registerUser);\n    tempObservable.subscribe(data => {\n      console.log(\" #6 Register component got the new user\", data);\n      this.errors = [];\n      if(data['message'] === 'error'){\n        console.log(\"This is our error data \", data);\n        var errorsResponse = data['errors']['errors'];\n        for(var key in errorsResponse){\n          var errString = errorsResponse[key]['message'];\n          this.errors.push(errString);\n        }\n        if(data['errors']['code'] === 11000){\n          this.errors.push(\"This username/email already exist\");\n        } \n      } else {\n        console.log(\"username from registration: \", data['username']);\n        var username = data['username'];\n        sessionStorage.setItem('username', username);\n        // this._router.navigate(['user/' + data['username']]);\n        this._router.navigate(['user/', username]);\n      }\n    })\n  }\n  goHome() {\n    this._router.navigate(['']);\n  }\n}","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":""}